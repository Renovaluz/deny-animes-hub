'use strict';

// --- IMPORTA√á√ïES ---
// Apenas as depend√™ncias necess√°rias para este ficheiro.
const sendEmail = require('../utils/sendEmail');

/**
 * @fileoverview Controller para gerir e registar eventos de seguran√ßa.
 * @module controllers/securityController
 */

const securityController = {};

/**
 * @desc    Regista um evento de seguran√ßa detectado no frontend e notifica o administrador.
 * @route   POST /api/security/log-event
 * @access  P√∫blico (a rota √© protegida opcionalmente)
 */
securityController.logSecurityEvent = async (req, res) => {
    try {
        // --- 1. CAPTURA E VALIDA√á√ÉO DOS DADOS ---

        // Dados enviados pelo script do frontend.
        const { eventType, userAgent, pageUrl, details } = req.body;

        // Dados obtidos de forma segura no backend.
        const user = req.user; // O middleware 'protegerOpcional' j√° populou 'req.user' se o utilizador estiver logado.
        
        // PONTO CR√çTICO DE SEGURAN√áA: Nunca confie no IP enviado pelo cliente no corpo da requisi√ß√£o.
        // Sempre use o IP que o seu servidor (Render) detecta.
        const clientIp = req.ip || req.connection.remoteAddress;

        // Log interno no servidor para registo.
        console.log(`[ALERTA DE SEGURAN√áA] Evento: '${eventType}' | IP: ${clientIp} | Utilizador: ${user ? user.id : 'Visitante'}`);

        // --- 2. PREPARA√á√ÉO DA NOTIFICA√á√ÉO ---

        // Monta um e-mail HTML detalhado para o administrador.
        const messageToAdmin = `
            <div style="font-family: Arial, sans-serif; line-height: 1.6;">
                <h1 style="color: #d9534f;">üö® ALERTA DE SEGURAN√áA - DenyAnimeHub üö®</h1>
                <p>Uma atividade que requer aten√ß√£o foi detectada no seu site.</p>
                
                <h3 style="border-bottom: 2px solid #eee; padding-bottom: 5px;">Detalhes do Evento</h3>
                <ul style="list-style: none; padding-left: 0;">
                    <li><strong>Tipo de Evento:</strong> ${eventType || 'N√£o especificado'}</li>
                    <li><strong>P√°gina Onde Ocorreu:</strong> ${pageUrl || 'N√£o especificada'}</li>
                    <li><strong>Endere√ßo IP do Visitante:</strong> ${clientIp}</li>
                    <li><strong>Detalhes Adicionais:</strong> <pre>${JSON.stringify(details, null, 2) || 'Nenhum'}</pre></li>
                </ul>

                <h3 style="border-bottom: 2px solid #eee; padding-bottom: 5px;">Informa√ß√µes do Utilizador (se autenticado)</h3>
                <ul style="list-style: none; padding-left: 0;">
                    <li><strong>ID do Utilizador:</strong> ${user ? user.id : 'Visitante n√£o autenticado'}</li>
                    <li><strong>Nome:</strong> ${user ? user.nome : 'Visitante n√£o autenticado'}</li>
                    <li><strong>Email:</strong> ${user ? user.email : 'Visitante n√£o autenticado'}</li>
                </ul>

                <h3 style="border-bottom: 2px solid #eee; padding-bottom: 5px;">User-Agent do Navegador</h3>
                <pre style="background-color: #f5f5f5; padding: 10px; border-radius: 5px;">${userAgent || 'N√£o especificado'}</pre>
                
                <p style="margin-top: 20px; font-size: 0.9em; color: #777;">Recomenda-se a verifica√ß√£o da atividade associada a este endere√ßo IP.</p>
            </div>
        `;

        // --- 3. ENVIO DA NOTIFICA√á√ÉO E RESPOSTA ---

        // Envia o e-mail de alerta para o endere√ßo do administrador.
        await sendEmail({
            email: process.env.ADMIN_EMAIL || 'denyneves14@gmail.com',
            subject: `[ALERTA URGENTE] Atividade Detectada: ${eventType}`,
            message: messageToAdmin
        });

        // Responde ao frontend com sucesso para confirmar que o evento foi registado.
        res.status(200).json({ success: true, message: 'Evento registado com sucesso.' });

    } catch (error) {
        // Em caso de falha (ex: falha no envio do e-mail), regista o erro no servidor.
        console.error("ERRO CR√çTICO AO REGISTAR EVENTO DE SEGURAN√áA:", error);
        
        // Responde com um erro gen√©rico para n√£o expor detalhes da infraestrutura.
        res.status(500).json({ success: false, error: 'Ocorreu uma falha interna ao processar o evento.' });
    }
};

module.exports = securityController;