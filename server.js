// ==========================================================================
// ARQUIVO: server.js
// RESPONSABILIDADE: Importar a aplica√ß√£o, conectar ao DB e iniciar o servidor.
// (Este √© o arquivo que voc√™ executa com `node` ou `nodemon`).
// ==========================================================================

// 1. IMPORTA A APLICA√á√ÉO J√Å CONFIGURADA DO ARQUIVO app.js
const app = require('./app');

// 2. IMPORTA A CONEX√ÉO COM O BANCO DE DADOS
const db = require('./models');

// 3. DEFINE A PORTA
const PORT = process.env.PORT || 3000;

// 4. FUN√á√ÉO PARA INICIAR O SERVIDOR
const startServer = async () => {
    try {
        // Testa a conex√£o com o banco de dados.
        await db.sequelize.authenticate();
        console.log(`‚úÖ Conex√£o com o banco de dados estabelecida com sucesso.`);
        
        // Sincroniza os modelos com o banco (√∫til em desenvolvimento).
        // Em produ√ß√£o, voc√™ pode querer remover ou usar 'alter: true'.
        await db.sequelize.sync({ force: false });
        console.log(`üîÑ Modelos sincronizados com o banco de dados.`);
        
        // Inicia o servidor e o faz "ouvir" por requisi√ß√µes na porta definida.
        app.listen(PORT, () => {
            console.log(`üöÄ Servidor DenyAnimeHub rodando em http://localhost:${PORT}`);
        });

    } catch (err) {
        // Se a conex√£o com o DB falhar, o servidor n√£o inicia.
        console.error('‚ùå N√£o foi poss√≠vel conectar ao banco de dados e iniciar o servidor:', err);
        process.exit(1); // Encerra o processo com um c√≥digo de erro.
    }
};

// 5. EXECUTA A FUN√á√ÉO DE INICIALIZA√á√ÉO
startServer();