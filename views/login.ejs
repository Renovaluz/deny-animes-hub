<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= locals.titulo || 'Login' %> | DenyAnimeHub</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
    <link rel="stylesheet" href="/css/style.css"> 
    <link rel="icon" href="/images/1.ico" type="image/ico">
    
    <style>
        /* ESTILOS COMPLETOS PARA A PÁGINA DE LOGIN. NADA OMITIDO. */
        body.login-page {
            display: flex; align-items: center; justify-content: center; min-height: 100vh;
            background-image: linear-gradient(rgba(10, 10, 12, 0.85), rgba(10, 10, 12, 0.85)), url('/images/berserk_legacy.jpg');
            background-size: cover; background-position: center;
        }
        .auth-container { width: 100%; max-width: 450px; perspective: 1000px; }
        .auth-form {
            display: none; opacity: 0; visibility: hidden; position: absolute; width: 100%; top: 0; left: 0;
            flex-direction: column; background-color: rgba(var(--bg-secondary-rgb), 0.97);
            padding: 2.5rem; border-radius: var(--border-radius-lg); border: 1px solid var(--border-color);
            box-shadow: var(--shadow-xl), 0 0 30px rgba(var(--shadow-glow-rgb), 0.1);
        }
        .auth-form.active-form { display: flex; opacity: 1; visibility: visible; position: relative; }
        .auth-form__header { margin-bottom: 1.5rem; text-align: center; }
        .auth-form__header h2 { color: var(--accent-primary); font-size: 2.2rem; text-shadow: 0 0 15px rgba(var(--shadow-glow-rgb), 0.4); margin-bottom: 0.5rem; }
        .auth-form__group { margin-bottom: 1.25rem; text-align: left; }
        .auth-form__group label { display: block; margin-bottom: 0.5rem; font-weight: 600; color: var(--text-secondary); font-size: 0.8rem; }
        .auth-form input { width: 100%; padding: 0.8rem 1rem; background-color: var(--input-bg); border: 1px solid var(--border-color); border-radius: var(--border-radius-md); color: var(--text-primary); font-size: 1rem; }
        .auth-form input:focus { outline: none; border-color: var(--accent-primary); box-shadow: 0 0 0 3px rgba(var(--shadow-glow-rgb), 0.3); }
        .auth-form__actions .btn { width: 100%; padding: 0.9rem; font-size: 1rem; }
        .auth-form__footer { margin-top: 1.5rem; font-size: 0.9rem; color: var(--text-secondary); }
        .auth-form__footer a { font-weight: 600; color: var(--accent-primary); cursor: pointer; }
        .auth-alert { display: none; padding: 1rem; margin-bottom: 1.5rem; border-radius: 5px; text-align: center; font-weight: 500; font-size: 0.9rem; }
        .auth-alert.error { background-color: rgba(239, 68, 68, 0.8); color: white; }
        .auth-alert.success { background-color: rgba(16, 185, 129, 0.8); color: white; }
    </style>
</head>
<body data-theme="dark" class="login-page">

    <div class="auth-container">
        <!-- Caixa de Alerta para Erros e Sucesso -->
        <div id="auth-alert" class="auth-alert"></div>

        <!-- Formulário de Login -->
        <form class="auth-form active-form" id="login-form">
            <div class="auth-form__header">
                <h2>Bem-vindo de Volta</h2>
                <p>Acesse sua conta para continuar</p>
            </div>
            <div class="auth-form__group">
                <label for="login-email">Email</label>
                <input type="email" id="login-email" name="email" required placeholder="seu@email.com">
            </div>
            <div class="auth-form__group">
                <label for="login-password">Senha</label>
                <input type="password" id="login-password" name="senha" required placeholder="Sua senha">
            </div>
            <div class="auth-form__actions">
                <button type="submit" class="btn btn--primary">Entrar <i class="fas fa-arrow-right"></i></button>
            </div>
            <div class="auth-form__footer">
                 <p>Não tem uma conta? <a class="form-switch-link" data-target="register-form">Registre-se aqui</a>.</p>
                 <a href="/" style="font-weight: normal; font-size: 0.8rem; opacity: 0.8;">Voltar ao Início</a>
            </div>
        </form>

        <!-- Formulário de Registro -->
        <form class="auth-form" id="register-form">
            <div class="auth-form__header">
                <h2>Crie sua Conta</h2>
                <p>Junte-se à comunidade DenyAnimeHub</p>
            </div>
            <div class="auth-form__group">
                <label for="register-username">Nome de Usuário</label>
                <input type="text" id="register-username" name="nome" required placeholder="Como devemos te chamar?">
            </div>
            <div class="auth-form__group">
                <label for="register-email">Email</label>
                <input type="email" id="register-email" name="email" required placeholder="Um e-mail válido">
            </div>
            <div class="auth-form__group">
                <label for="register-password">Senha</label>
                <input type="password" id="register-password" name="senha" minlength="6" required placeholder="Mínimo 6 caracteres">
            </div>
            <div class="auth-form__actions">
                <button type="submit" class="btn btn--primary">Registrar <i class="fas fa-user-plus"></i></button>
            </div>
            <div class="auth-form__footer">
                <p>Já tem uma conta? <a class="form-switch-link" data-target="login-form">Faça o login</a>.</p>
            </div>
        </form>
    </div>

    <script>
    // SCRIPT COMPLETO E ROBUSTO PARA AUTENTICAÇÃO
    document.addEventListener('DOMContentLoaded', () => {
        const loginForm = document.getElementById('login-form');
        const registerForm = document.getElementById('register-form');
        const authAlert = document.getElementById('auth-alert');
        const formSwitchLinks = document.querySelectorAll('.form-switch-link');

        const showAlert = (message, type = 'error') => {
            authAlert.textContent = message;
            authAlert.className = `auth-alert ${type}`;
            authAlert.style.display = 'block';
        };

        formSwitchLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const targetId = e.target.dataset.target;
                document.querySelectorAll('.auth-form').forEach(form => form.classList.remove('active-form'));
                document.getElementById(targetId)?.classList.add('active-form');
                authAlert.style.display = 'none';
            });
        });

        const handleFormSubmit = async (form, endpoint) => {
            const submitButton = form.querySelector('button[type="submit"]');
            const originalButtonText = submitButton.innerHTML;
            submitButton.disabled = true;
            submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processando...';
            authAlert.style.display = 'none';

            const formData = new FormData(form);
            const body = Object.fromEntries(formData.entries());

            try {
                // A rota da API de autenticação é '/auth', não '/api/auth'
                const response = await fetch(`/auth${endpoint}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(body),
                });
                
                // O PASSO MAIS IMPORTANTE: LER A RESPOSTA COMO JSON
                const data = await response.json();

                // Se a resposta não foi OK (ex: 401, 400, 500), lança um erro com a mensagem do JSON
                if (!response.ok || !data.success) {
                    throw new Error(data.error || 'Ocorreu um erro desconhecido.');
                }
                
                // Lida com o sucesso
                if (endpoint === '/registrar') {
                    showAlert(data.message, 'success');
                    setTimeout(() => {
                        document.querySelector('.form-switch-link[data-target="login-form"]').click();
                        document.getElementById('login-email').value = body.email;
                    }, 2000);
                } else if (endpoint === '/login') {
                    showAlert('Login bem-sucedido! Redirecionando...', 'success');
                    window.location.href = data.user.role === 'admin' ? '/admin/dashboard' : '/';
                }

            } catch (error) {
                // AQUI ELE PEGA O ERRO LANÇADO E O EXIBE
                // Se for um erro de rede, o catch também pega.
                showAlert(error.message, 'error');
            } finally {
                submitButton.disabled = false;
                submitButton.innerHTML = originalButtonText;
            }
        };

        if (loginForm) {
            loginForm.addEventListener('submit', (e) => {
                e.preventDefault();
                handleFormSubmit(loginForm, '/login');
            });
        }
        if (registerForm) {
            registerForm.addEventListener('submit', (e) => {
                e.preventDefault();
                handleFormSubmit(registerForm, '/registrar');
            });
        }

        const params = new URLSearchParams(window.location.search);
        const sucessoUrl = params.get('sucesso');
        const erroUrl = params.get('erro');
        if (sucessoUrl) showAlert(sucessoUrl, 'success');
        if (erroUrl) showAlert(erroUrl, 'error');
    });
    </script>
</body>
</html>