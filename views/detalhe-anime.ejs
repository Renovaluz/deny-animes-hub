<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalhes do Anime - Nível Akatsuki</title>
    <!-- A fonte Poppins já deve estar linkada no seu projeto principal -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <!-- Font Awesome para os ícones -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<style>
    /* -------------------------------------------------------------------------- */
    /*           ESTILO BASE ELEVADO AO NÍVEL AKATSUKI - POR GEMINI               */
    /* -------------------------------------------------------------------------- */

    :root {
        /* Paleta de Cores Akatsuki */
        --akatsuki-red: #E53935; /* Vermelho sangue, icônico e vibrante */
        --akatsuki-red-rgb: 229, 57, 53;
        --akatsuki-dark: #0a0a0a; /* Quase preto, para a escuridão do manto */
        --akatsuki-dark-rgb: 10, 10, 10;
        --akatsuki-charcoal: #161616; /* Carvão, para painéis e seções */
        --akatsuki-gray: #212121; /* Cinza escuro para elementos terciários */
        --akatsuki-light-text: #f5f5f5; /* Texto principal, branco suave */
        --akatsuki-muted-text: #7f7a7a; /* Texto secundário, para informações */
        --akatsuki-border: rgba(var(--akatsuki-red-rgb), 0.3); /* Borda sutil e temática */
        --akatsuki-border-soft: #2a2a2a;

        /* Reatribuindo variáveis originais para o tema Akatsuki */
        --font-primary: 'Poppins', sans-serif;
        --bg-primary: var(--akatsuki-dark);
        --bg-primary-rgb: var(--akatsuki-dark-rgb);
        --bg-secondary: var(--akatsuki-charcoal);
        --bg-tertiary: var(--akatsuki-gray);
        --text-primary: var(--akatsuki-light-text);
        --text-secondary: var(--akatsuki-muted-text);
        --accent-primary: var(--akatsuki-red);
        --accent-primary-rgb: var(--akatsuki-red-rgb);
        --border-color: var(--akatsuki-border);
        --border-color-soft: var(--akatsuki-border-soft);
        --border-radius: 8px;
        --border-radius-lg: 12px;
    }

    /* Estilização da barra de rolagem para imersão total */
    ::-webkit-scrollbar {
        width: 10px;
    }
    ::-webkit-scrollbar-track {
        background: var(--bg-primary);
    }
    ::-webkit-scrollbar-thumb {
        background-color: var(--accent-primary);
        border-radius: 20px;
        border: 2px solid var(--bg-primary);
    }
    ::-webkit-scrollbar-thumb:hover {
        background-color: #ff4d49;
    }

    /* Reset básico e corpo com a nova fonte */
    body {
        font-family: var(--font-primary);
        background-color: var(--bg-primary);
        color: var(--text-primary);
    }

    /* Hero com fundo desfocado - Efeito mais dramático */
    .anime-detail-hero {
        position: absolute;
        top: 0; left: 0; right: 0;
        height: 70vh; /* Mais altura para um efeito imponente */
        background-size: cover;
        background-position: center 20%; /* Foco um pouco mais para cima */
        filter: blur(10px) brightness(0.3) saturate(1.2); /* Mais escuro e saturado */
        transform: scale(1.1); /* Evita bordas vazias do blur */
        z-index: -1;
    }

    .anime-detail-hero-overlay {
        position: absolute;
        inset: 0;
        /* Gradiente mais forte para fundir com o fundo da página */
        background: linear-gradient(to top, var(--bg-primary) 10%, rgba(var(--bg-primary-rgb), 0.8) 40%, transparent 80%);
        /* Padrão de nuvem sutil no fundo para a temática */
        background-image:
            linear-gradient(to top, var(--bg-primary) 10%, rgba(var(--bg-primary-rgb), 0.8) 40%, transparent 80%),
            url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 40"><path fill="rgba(229, 57, 53, 0.03)" d="M40 0C17.9 0 0 17.9 0 40h80C80 17.9 62.1 0 40 0z"/></svg>');
        background-size: auto, 120px;
    }


    .anime-detail-container {
        padding-top: 20vh; /* Empurra o conteúdo para baixo */
        position: relative;
        z-index: 2;
    }

    .anime-detail-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 2rem;
        align-items: flex-start;
    }
    @media (min-width: 992px) {
        .anime-detail-grid {
            grid-template-columns: 320px 1fr; /* Sidebar um pouco maior */
            gap: 3.5rem;
        }
    }

    /* Sidebar com pôster e informações - Design mais arrojado */
    .anime-detail-sidebar .anime-poster img {
        width: 100%;
        border-radius: var(--border-radius-lg);
        border: 4px solid var(--border-color);
        box-shadow: 0 10px 40px rgba(0,0,0,0.7), 0 0 15px rgba(var(--accent-primary-rgb), 0.2);
        transition: transform 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
    }
    .anime-detail-sidebar .anime-poster img:hover {
        transform: scale(1.05) translateY(-5px);
        border-color: var(--accent-primary);
        box-shadow: 0 20px 50px rgba(0,0,0,0.8), 0 0 35px rgba(var(--accent-primary-rgb), 0.5);
    }
    .anime-info-block {
        background-color: var(--bg-secondary);
        padding: 1.5rem;
        border-radius: var(--border-radius-lg);
        margin-top: 1.5rem;
        border: 1px solid var(--border-color);
        box-shadow: inset 0 2px 10px rgba(0,0,0,0.3);
    }
    .anime-info-block h4 {
        margin: 0 0 1.2rem 0;
        font-size: 1.2rem;
        color: var(--text-primary);
        text-transform: uppercase;
        letter-spacing: 1.5px;
        font-weight: 600;
        border-bottom: 2px solid var(--accent-primary);
        padding-bottom: 0.5rem;
    }
    .info-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 0.25rem;
        border-bottom: 1px solid var(--border-color-soft);
        font-size: 0.95rem;
    }
    .info-item:last-child { border-bottom: none; }
    .info-item strong {
        color: var(--text-primary);
        font-weight: 500;
    }
    .info-item span {
        color: var(--text-secondary);
        font-weight: 400;
        text-align: right;
    }

    /* Conteúdo principal - Título e seções com mais poder */
    .anime-detail-content h1 {
        font-size: clamp(2.8rem, 6vw, 4.5rem);
        font-weight: 800; /* Mais peso */
        line-height: 1.1;
        color: var(--text-primary);
        text-shadow: 0 4px 15px rgba(0,0,0,0.6), 0 0 10px rgba(var(--accent-primary-rgb), 0.5);
        margin-bottom: 1rem;
    }

    .anime-detail-content h4 {
        font-size: 2rem;
        color: var(--text-primary);
        margin-top: 3rem;
        margin-bottom: 1.5rem;
        padding-left: 1.5rem;
        border-left: 5px solid var(--accent-primary);
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
    }
    .anime-detail-content .synopsis {
        font-size: 1.1rem;
        line-height: 1.9; /* Mais espaçamento para leitura */
        color: var(--text-secondary);
        background-color: rgba(var(--bg-primary-rgb), 0.3);
        padding: 1rem;
        border-radius: var(--border-radius);
    }
    
    /* --- SEÇÃO DE TRAILER EXPANDIDA --- */
    .trailer-section-akatsuki {
        background: var(--bg-secondary);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius-lg);
        padding: 2rem;
        margin-top: 1rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.5);
        /* Padrão de nuvem da Akatsuki como fundo */
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 40"><path fill="rgba(229, 57, 53, 0.05)" d="M40 0C17.9 0 0 17.9 0 40h80C80 17.9 62.1 0 40 0z"/></svg>');
        background-size: 100px;
        background-repeat: repeat;
        position: relative;
    }
    .video-container {
        position: relative;
        padding-bottom: 56.25%; /* Proporção 16:9 */
        height: 0;
        overflow: hidden;
        border-radius: var(--border-radius);
        border: 3px solid var(--border-color);
        box-shadow: 0 5px 25px rgba(0,0,0,0.7);
    }
    .video-container iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }


    /* Lista de episódios e temporadas - Interatividade aprimorada */
    .season-selector {
        display: flex;
        gap: 0.75rem;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
    }
    .season-btn {
        background-color: var(--bg-tertiary);
        border: 2px solid var(--border-color);
        color: var(--text-secondary);
        padding: 0.6rem 1.2rem;
        border-radius: 50px; /* Estilo "pílula" */
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.9rem;
    }
    .season-btn.active, .season-btn:hover {
        background-color: var(--accent-primary);
        color: white;
        border-color: var(--accent-primary);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(var(--accent-primary-rgb), 0.3);
    }

    .episode-list-season { display: none; }
    .episode-list-season.active { display: block; }

    .episode-list {
        list-style: none;
        padding: 0;
        margin: 0;
        max-height: 500px;
        overflow-y: auto;
        border-radius: var(--border-radius-lg);
        background-color: var(--bg-secondary);
        border: 1px solid var(--border-color);
    }
    .episode-list li a {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.2rem 1.5rem;
        color: var(--text-secondary);
        transition: all .2s ease;
        border-bottom: 1px solid var(--border-color-soft);
        text-decoration: none;
        font-weight: 500;
        position: relative;
        overflow: hidden;
    }
    .episode-list li:last-child a { border-bottom: none; }
    
    /* Efeito de preenchimento vermelho no hover */
    .episode-list li a::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background-color: rgba(var(--accent-primary-rgb), .15);
        transition: left 0.3s ease;
        z-index: 0;
    }
    
    .episode-list li a:hover::before {
        left: 0;
    }

    .episode-list li a:hover {
        color: var(--text-primary);
        transform: translateX(10px); /* Movimento mais pronunciado */
    }
    /* Para o texto e ícone ficarem acima do pseudo-elemento */
    .episode-list li a span, .episode-list li a i {
        position: relative;
        z-index: 1;
    }

    /* Estilo do botão principal de ação */
    .btn.btn--primary {
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        background-color: var(--accent-primary);
        color: white;
        border: none;
        padding: 0.8rem 1.5rem;
        border-radius: 50px;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
        text-decoration: none;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(var(--accent-primary-rgb), 0.3);
    }

    .btn.btn--primary:hover {
        transform: translateY(-3px);
        background-color: #ff4d49; /* Um vermelho mais claro no hover */
        box-shadow: 0 8px 25px rgba(var(--accent-primary-rgb), 0.5);
    }

</style>
</head>
<body>

<!-- Hero com fundo dinâmico -->
<div class="anime-detail-hero" style="background-image: url('<%= anime.imagemCapa %>');">
    <div class="anime-detail-hero-overlay"></div>
</div>

<div class="container anime-detail-container">
    <div class="anime-detail-grid">
        <aside class="anime-detail-sidebar">
            <div class="anime-poster">
                <img src="<%= anime.imagemCapa %>" alt="Pôster de <%= anime.titulo %>">
            </div>
             <% if (anime.episodios && anime.episodios.length > 0) { %>
                <a href="/assistir/<%= anime.slug %>/<%= anime.episodios[0].id %>" class="btn btn--primary" style="width: 100%; justify-content: center; margin-top: 1.5rem; padding: 1rem; font-size: 1.1rem;">
                    <i class="fas fa-play"></i> Assistir Agora
                </a>
            <% } %>
            <div class="anime-info-block">
                <h4><i class="fas fa-info-circle"></i> Detalhes</h4>
                <div class="info-item"><strong>Nota:</strong> <span><i class="fas fa-star" style="color: #f5c518;"></i> <%= anime.classificacao || 'N/A' %></span></div>
                <div class="info-item"><strong>Ano:</strong> <span><%= anime.anoLancamento %></span></div>
                <div class="info-item"><strong>Estúdio:</strong> <span><%= anime.estudio || 'N/A' %></span></div>
                <div class="info-item"><strong>Visualizações:</strong> <span><%= anime.views.toLocaleString('pt-BR') %></span></div>
                <div class="info-item"><strong>Gêneros:</strong> <span><%= Array.isArray(anime.generos) ? anime.generos.join(', ') : 'N/A' %></span></div>
            </div>
        </aside>

        <main class="anime-detail-content">
            <h1><%= anime.titulo %></h1>
            
            <h4>Sinopse</h4>
            <p class="synopsis"><%- anime.sinopse.replace(/\n/g, '<br>') %></p>
            
            <% if(anime.trailerUrl) { %>
                <!-- SEÇÃO DE TRAILER TOTALMENTE REESTILIZADA E EXPANDIDA -->
                <section>
                    <h4>Trailer Oficial</h4>
                    <div class="trailer-section-akatsuki">
                        <div class="video-container">
                            <iframe src="<%= anime.trailerUrl %>" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                        </div>
                    </div>
                </section>
            <% } %>

            <h4>Episódios</h4>
            <% if(anime.episodios && anime.episodios.length > 0) {
                const temporadas = anime.episodios.reduce((acc, ep) => {
                    const temp = ep.temporada || 1;
                    if (!acc[temp]) acc[temp] = [];
                    acc[temp].push(ep);
                    return acc;
                }, {});
            %>
                <div class="season-selector">
                    <% Object.keys(temporadas).sort((a, b) => a - b).forEach((tempNum, index) => { %>
                        <button class="season-btn <%= index === 0 ? 'active' : '' %>" data-season="<%= tempNum %>">
                            Temporada <%= tempNum %>
                        </button>
                    <% }) %>
                </div>
                <% Object.keys(temporadas).sort((a, b) => a - b).forEach((tempNum, index) => { %>
                    <div class="episode-list-season <%= index === 0 ? 'active' : '' %>" id="season-<%= tempNum %>">
                        <ul class="episode-list">
                            <% temporadas[tempNum].forEach(ep => { %>
                                <li>
                                    <a href="/assistir/<%= anime.slug %>/<%= ep.id %>">
                                        <span>Episódio <%= ep.numero %><% if (ep.titulo) { %> - <%= ep.titulo %><% } %></span>
                                        <i class="fas fa-play-circle"></i>
                                    </a>
                                </li>
                            <% }) %>
                        </ul>
                    </div>
                <% }) %>
            <% } else { %>
                <p>Nenhum episódio cadastrado para este anime ainda.</p>
            <% } %>
        </main>
    </div>
</div>

<script>
// O SCRIPT PERMANECE IDÊNTICO, POIS SUA LÓGICA É PERFEITA E INDEPENDE DO ESTILO.
document.addEventListener('DOMContentLoaded', () => {
    const seasonButtons = document.querySelectorAll('.season-btn');
    if (seasonButtons.length > 1) { // Só ativa o script se houver mais de uma temporada
        seasonButtons.forEach(button => {
            button.addEventListener('click', () => {
                const targetSeason = button.dataset.season;
                // Remove a classe 'active' de todos os botões e listas
                document.querySelectorAll('.season-btn').forEach(btn => btn.classList.remove('active'));
                document.querySelectorAll('.episode-list-season').forEach(list => list.classList.remove('active'));
                // Adiciona a classe 'active' ao botão clicado e à lista correspondente
                button.classList.add('active');
                document.getElementById(`season-${targetSeason}`).classList.add('active');
            });
        });
    }
});
</script>

</body>
</html>