// ========================================================================
// SCRIPT DE SETUP PARA PRODU√á√ÉO
// Responsabilidade: Criar o usu√°rio admin se ele n√£o existir.
// Seguro e n√£o apaga dados existentes.
// ========================================================================

require('dotenv').config(); // Carrega as vari√°veis de ambiente (DB_HOST, etc.)
const db = require('./models'); // Importa a conex√£o com o banco e os modelos

const setupProduction = async () => {
    try {
        console.log('Conectando ao banco de dados de produ√ß√£o...');
        // A configura√ß√£o de produ√ß√£o (com SSL) j√° est√° no models/index.js
        await db.sequelize.authenticate();
        console.log('‚úÖ Conex√£o bem-sucedida.');

        console.log('Verificando se o usu√°rio admin j√° existe...');
        const adminEmail = 'admin@denyanimehub.com';
        const adminExists = await db.User.scope('comSenha').findOne({ where: { email: adminEmail } });

        if (adminExists) {
            console.log('‚úÖ Usu√°rio admin j√° existe. Nenhuma a√ß√£o necess√°ria.');
            return;
        }

        console.log('Criando usu√°rio admin padr√£o...');
        const adminUser = await db.User.create({
            nome: 'Admin Akatsuki',
            email: adminEmail,
            // IMPORTANTE: Use uma senha forte para o ambiente de produ√ß√£o
            senha: process.env.ADMIN_DEFAULT_PASSWORD || 'admin@@@...2025',
            role: 'admin'
        });
        console.log(`üöÄ Usu√°rio admin de produ√ß√£o criado com sucesso! ID: ${adminUser.id}`);

    } catch (error) {
        console.error('‚ùå Erro durante o setup de produ√ß√£o:', error);
    } finally {
        // Garante que a conex√£o com o banco seja fechada no final
        if (db.sequelize) {
            await db.sequelize.close();
            console.log('Conex√£o com o banco de dados fechada.');
        }
    }
};

setupProduction();