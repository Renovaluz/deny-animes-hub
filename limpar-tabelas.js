// ====================================================================================
//
//              DenyAnimeHub - Script de Limpeza Total do Banco (Vers√£o Definitiva)
//
// Descri√ß√£o:     Este script apaga TODAS as tabelas da aplica√ß√£o para for√ßar uma
//                recria√ß√£o completa e limpa pelo Sequelize. Use em desenvolvimento
//                para resolver problemas de sincroniza√ß√£o.
//
// Como usar:     1. GARANTA QUE SEU SERVI√áO POSTGRESQL EST√Å RODANDO.
//                2. Execute no terminal: node limpar-tabelas.js
//
// ====================================================================================

'use strict';

const { Sequelize } = require('sequelize');
const path = require('path');
const env = process.env.NODE_ENV || 'development';
const config = require(path.join(__dirname, 'config', 'config.json'))[env];

const sequelize = new Sequelize(config.database, config.username, config.password, {
    host: config.host,
    dialect: 'postgres',
    logging: false
});

const apagarTudo = async () => {
  try {
    console.log('üîå Conectando ao banco de dados...');
    await sequelize.authenticate();
    console.log('‚úÖ Conex√£o bem-sucedida.');

    console.log("üî• INICIANDO LIMPEZA TOTAL DAS TABELAS DA APLICA√á√ÉO...");

    // Apaga em ordem de depend√™ncia para evitar erros
    await sequelize.query('DROP TABLE IF EXISTS "ratings" CASCADE;');
    console.log("‚úÖ Tabela 'ratings' apagada.");
    
    await sequelize.query('DROP TABLE IF EXISTS "comments" CASCADE;');
    console.log("‚úÖ Tabela 'comments' apagada.");

    await sequelize.query('DROP TABLE IF EXISTS "historicos" CASCADE;');
    console.log("‚úÖ Tabela 'historicos' apagada.");

    await sequelize.query('DROP TABLE IF EXISTS "posts" CASCADE;');
    console.log("‚úÖ Tabela 'posts' apagada.");

    await sequelize.query('DROP TABLE IF EXISTS "episodios" CASCADE;');
    console.log("‚úÖ Tabela 'episodios' apagada.");

    await sequelize.query('DROP TABLE IF EXISTS "animes" CASCADE;');
    console.log("‚úÖ Tabela 'animes' apagada.");

    await sequelize.query('DROP TABLE IF EXISTS "users" CASCADE;');
    console.log("‚úÖ Tabela 'users' apagada.");


    console.log('\n‚ú® Processo de limpeza total conclu√≠do! A funda√ß√£o est√° pronta para ser reconstru√≠da.');
    console.log('Pode iniciar seu servidor com "npm start".');

  } catch (error) {
    console.error('‚ùå Erro durante a limpeza total:', error);
    if (error.name === 'SequelizeConnectionError') {
        console.error('\nDICA: Verifique suas credenciais em "/config/config.json" e se o servidor PostgreSQL est√° rodando.');
    }
  } finally {
    await sequelize.close();
    console.log('üîå Conex√£o com o banco de dados fechada.');
  }
};

apagarTudo();